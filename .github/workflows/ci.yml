name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Verify Node.js version
      run: |
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (if eslint is added later)
      run: |
        if [ -f "package.json" ] && grep -q "eslint" package.json; then
          npm run lint
        else
          echo "No linting configured, skipping..."
        fi
      continue-on-error: true
      
    - name: Run tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      continue-on-error: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build package
      run: |
        # Test that the package can be built/installed
        npm pack
        echo "Package built successfully"
        
    - name: Test CLI functionality
      run: |
        # Test CLI commands
        echo "Testing CLI version..."
        npm run cli -- --version
        echo "Testing CLI help..."
        npm run cli -- --help
        echo "Testing CLI ticket generation..."
        npm run cli -- ticket -c 1 -f json
        echo "Testing CLI sequence generation..."
        npm run cli -- sequence -c 1 -f json
        echo "CLI tests passed"
        
    - name: Test example script
      run: |
        # Test the example script
        npm run example
        echo "Example script passed"

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: |
        if npm audit --audit-level=high; then
          echo "No high severity vulnerabilities found"
        else
          echo "High severity vulnerabilities found - please review"
          exit 1
        fi

  publish:
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      continue-on-error: true 